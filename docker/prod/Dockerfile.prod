# Production Dockerfile with multi-stage build for minimal runtime image
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/code
ENV PATH="/root/.local/bin:$PATH"

# Install build dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        postgresql-client \
        curl \
    && rm -rf /var/lib/apt/lists/*

# Install uv
RUN pip install --no-cache-dir --user uv

# Set work directory
WORKDIR /code

# Copy dependency files and README first for better caching
COPY pyproject.toml uv.lock README.md ./

# Install production dependencies only (using sync for now)
RUN uv sync --frozen

# Copy source code
COPY . .

# Production runtime stage
FROM python:3.11-slim as production

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/code
ENV PATH="/root/.local/bin:$PATH"

# Install runtime dependencies only
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /code/.venv /code/.venv

# Copy source code
COPY --from=builder /code/src /code/src

# Set work directory
WORKDIR /code

# Expose port
EXPOSE 8000

# Default command for production
CMD ["/root/.local/bin/uv", "run", "gunicorn", "src.app.main:app", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000"]
