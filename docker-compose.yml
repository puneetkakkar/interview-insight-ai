services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    # Environment-aware command
    command: >-
      sh -c '
      if [ "${ENVIRONMENT}" = "production" ]; then
        uv run gunicorn src.app.main:app -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000 --access-logfile -;
      else
        uv run uvicorn src.app.main:app --host 0.0.0.0 --port 8000 --reload --no-access-log;
      fi'
    # Production command (uncomment to use gunicorn)
    # command: gunicorn src.app.main:app -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ./src:/code/src
      - ./tests:/code/tests
      - ./.env:/code/.env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
      - RELOAD=${RELOAD:-true}

  db:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-fastapi_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}

volumes:
  postgres-data:
